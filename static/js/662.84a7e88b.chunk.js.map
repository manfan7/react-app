{"version":3,"file":"static/js/662.84a7e88b.chunk.js","mappings":"gKACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,gBAAkB,iCAAiC,QAAU,0B,mBCepQ,EAZmB,SAACA,GAClB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAMC,OAAM,KAAAF,OAAIC,EAAME,QAASC,UAChDN,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CACNN,UAAW,SAAAO,GAAW,OAAAA,EAARC,SAA2BN,EAAME,YAASK,CAAS,EACjEC,GAAE,YAAAT,OAAcH,EAAMa,IAAKN,SAE1BP,EAAMc,QAIf,ECVA,EAHgB,SAACd,GACf,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAMW,QAAQR,SAAEP,EAAMe,SAC/C,E,uCCQMC,GAAYC,E,QAAAA,GAAiB,IA2C7BC,GAAsBC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,qBADoBD,EAdL,SAACnB,GACtB,OACEqB,EAAAA,EAAAA,MAAA,QAAMC,SAAUtB,EAAMuB,aAAahB,SAAA,EACjCN,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CACJC,UAAWC,EAAAA,EACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAUZ,KAGZf,EAAAA,EAAAA,KAAA,UAAAM,SAAQ,kBAGd,IAIA,EA7CgB,SAACP,GAGf,IAGI6B,EAAkB7B,EAAM8B,YAAYC,KAAI,SAACC,GAC3C,OAAO/B,EAAAA,EAAAA,KAACgC,EAAU,CAACnB,KAAMkB,EAAGlB,KAAMD,GAAImB,EAAGnB,IAC3C,IACIqB,EAAmBlC,EAAMmC,aAAaJ,KAAI,SAACC,GAC7C,OAAO/B,EAAAA,EAAAA,KAACmC,EAAO,CAACrB,QAASiB,EAAGjB,QAASF,GAAImB,EAAGnB,IAC9C,IACA,OAAoB,GAAhBb,EAAMqC,QACDpC,EAAAA,EAAAA,KAACqC,EAAAA,GAAQ,CAAC1B,GAAI,YAGrBS,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACEc,EAAAA,EAAAA,MAAA,OAAKnB,UAAWE,EAAMmC,QAAQhC,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAMoC,aAAajC,SAAEsB,KACrC5B,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAMqC,SAASlC,SAAE2B,QAEnCjC,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAMsC,gBAAgBnC,UACpCN,EAAAA,EAAAA,KAACiB,EAAmB,CAACI,SAnBP,SAACqB,GACnB3C,EAAM4C,WAAWD,EAAOE,eAC1B,QAqBF,E,8BChBA,GAAeC,E,QAAAA,IACbC,EAAAA,GACAC,EAAAA,EAAAA,KAhBoB,SAACC,GACrB,MAAO,CACLnB,YAAamB,EAAMC,aAAapB,YAChCK,aAAcc,EAAMC,aAAaf,aACjCgB,eAAgBF,EAAMC,aAAaC,eAEvC,IACyB,SAACC,GACxB,MAAO,CACLR,WAAY,SAACC,GACXO,GAASC,EAAAA,EAAAA,GAAwBR,GACnC,EAEJ,IACA,CAGES,E","sources":["webpack://my-app1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__hmG8Z\",\"dialogsItems\":\"Dialogs_dialogsItems__uOGoi\",\"dialog\":\"Dialogs_dialog__Gf6Od\",\"active\":\"Dialogs_active__rrINm\",\"messages\":\"Dialogs_messages__EaltO\",\"MessageTextArea\":\"Dialogs_MessageTextArea__SeGDo\",\"newArea\":\"Dialogs_newArea__Y4qiP\"};","import React from \"react\";\r\nimport style from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={`${style.dialog} ${style.active}`}>\r\n      <NavLink\r\n        className={({ isActive }) => (isActive ? style.active : undefined)}\r\n        to={`/dialogs/${props.id}`}\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport style from \"../Dialogs.module.css\";\r\nconst Message = (props) => {\r\n  return <div className={style.message}>{props.message}</div>;\r\n};\r\nexport default Message;\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./MessageItem/MessageItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { TextArea } from \"../common/FormsControl/TextArea\";\r\nimport {\r\n  requiredCreater,\r\n  maxLengthCreator,\r\n} from \"../utils/validator/validators\";\r\n\r\nconst maxLength = maxLengthCreator(30);\r\nconst Dialogs = (props) => {\r\n  /* let MessageTextArea = React.createRef(); */\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageBody);\r\n  };\r\n  let dialogsElements = props.dialogsData.map((el) => {\r\n    return <DialogItem name={el.name} id={el.id} />;\r\n  });\r\n  let messagesElements = props.messagesData.map((el) => {\r\n    return <Message message={el.message} id={el.id} />;\r\n  });\r\n  if (props.isAuth == false) {\r\n    return <Navigate to={\"/login\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={style.dialogs}>\r\n        <div className={style.dialogsItems}>{dialogsElements}</div>\r\n        <div className={style.messages}>{messagesElements}</div>\r\n      </div>\r\n      <div className={style.MessageTextArea}>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={TextArea}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"write your message\"\r\n        validate={maxLength}\r\n      />\r\n\r\n      <button>Add Message</button>\r\n    </form>\r\n  );\r\n};\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: \"dialogMessageForm\",\r\n})(AddMessageForm);\r\nexport default Dialogs;\r\n","import React from \"react\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\nimport { addMessageActionCreator } from \"../../redux/messages-reducer\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.messagesPage.dialogsData,\r\n    messagesData: state.messagesPage.messagesData,\r\n    newMessageText: state.messagesPage.newMessageText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n"],"names":["props","_jsx","className","concat","style","dialog","active","children","NavLink","_ref","isActive","undefined","to","id","name","message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","dialogsElements","dialogsData","map","el","DialogItem","messagesElements","messagesData","Message","isAuth","Navigate","dialogs","dialogsItems","messages","MessageTextArea","values","addMessage","newMessageBody","compose","withAuthRedirect","connect","state","messagesPage","newMessageText","dispatch","addMessageActionCreator","Dialogs"],"sourceRoot":""}